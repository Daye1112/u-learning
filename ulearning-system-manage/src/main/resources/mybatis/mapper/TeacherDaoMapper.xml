<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ky.ulearning.system.auth.dao.TeacherDao">
    <resultMap id="BaseResultMap" type="com.ky.ulearning.spi.system.entity.TeacherEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="tea_number" jdbcType="VARCHAR" property="teaNumber"/>
        <result column="tea_name" jdbcType="VARCHAR" property="teaName"/>
        <result column="tea_password" jdbcType="VARCHAR" property="teaPassword"/>
        <result column="tea_gender" jdbcType="VARCHAR" property="teaGender"/>
        <result column="tea_dept" jdbcType="VARCHAR" property="teaDept"/>
        <result column="tea_title" jdbcType="VARCHAR" property="teaTitle"/>
        <result column="tea_phone" jdbcType="VARCHAR" property="teaPhone"/>
        <result column="tea_email" jdbcType="VARCHAR" property="teaEmail"/>
        <result column="tea_photo" jdbcType="VARCHAR" property="teaPhoto"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="pwd_update_time" jdbcType="TIMESTAMP" property="pwdUpdateTime"/>
    </resultMap>
    <resultMap id="TeacherVoResultMap" type="com.ky.ulearning.spi.system.vo.TeacherVo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="tea_number" jdbcType="VARCHAR" property="teaNumber"/>
        <result column="tea_name" jdbcType="VARCHAR" property="teaName"/>
    </resultMap>
    <sql id="selectAll">
        id, tea_number,
        tea_name, tea_password,
        tea_gender, tea_dept,
        tea_title, tea_phone,
        tea_email, tea_photo,
        last_login_time, `valid`,
        memo, create_time,
        create_by, update_time,
        update_by, pwd_update_time
    </sql>
    <sql id="vo">
            id,
            tea_number,
            tea_name
    </sql>
    <select id="getByTeaNumber" resultMap="BaseResultMap">
        SELECT
        <include refid="selectAll"/>
        FROM u_teacher
        WHERE valid = 1
        AND tea_number = #{teaNumber,jdbcType=VARCHAR}
        LIMIT 1
    </select>
    <!--根据教师编号查询教师信息-->
    <select id="findByTeaNumber" resultMap="BaseResultMap">
        SELECT
        <include refid="selectAll"/>
        FROM u_teacher
        WHERE valid = 1
        AND tea_number = #{teaNumber,jdbcType=VARCHAR}
        LIMIT 1
    </select>
    <!--根据教师邮箱查询教师信息-->
    <select id="findByEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="selectAll"/>
        FROM u_teacher
        WHERE valid = 1
        AND tea_email = #{teaEmail}
        LIMIT 1
    </select>
    <!--更新教师信息-->
    <update id="updateById">
        UPDATE u_teacher
        <set>
            update_time = now(),
            <if test="teaNumber != null and teaNumber != ''">
                tea_number = #{teaNumber},
            </if>
            <if test="teaName != null and teaName != ''">
                tea_name = #{teaName},
            </if>
            <if test="teaPassword != null and teaPassword != ''">
                tea_password = #{teaPassword},
            </if>
            <if test="teaGender != null and teaGender != ''">
                tea_gender = #{teaGender},
            </if>
            <if test="teaDept != null and teaDept != ''">
                tea_dept = #{teaDept},
            </if>
            <if test="teaTitle != null and teaTitle != ''">
                tea_title = #{teaTitle},
            </if>
            <if test="teaEmail != null and teaEmail != ''">
                tea_email = #{teaEmail},
            </if>
            <if test="teaPhone != null and teaPhone != ''">
                tea_phone = #{teaPhone},
            </if>
            <if test="memo != null and memo != ''">
                memo = #{memo},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="pwdUpdateTime != null">
                pwd_update_time = #{pwdUpdateTime},
            </if>
            <if test="teaPhoto != null and teaPhoto != ''">
                tea_photo = #{teaPhoto},
            </if>
        </set>
        WHERE valid = 1
        AND id = #{id}
    </update>
    <!--根据条件进行用户查询-->
    <select id="listPage" resultMap="BaseResultMap">
        SELECT
        <include refid="selectAll"/>
        FROM u_teacher
        WHERE valid = 1
        <if test="teacherDto.id != null">
            AND id = #{teacherDto.id}
        </if>
        <if test="teacherDto.teaNumber != null and teacherDto.teaNumber != ''">
            AND tea_number LIKE concat('%', #{teacherDto.teaNumber}, '%')
        </if>
        <if test="teacherDto.teaName != null and teacherDto.teaName != ''">
            AND tea_name LIKE concat('%', #{teacherDto.teaName}, '%')
        </if>
        <if test="teacherDto.teaGender != null and teacherDto.teaGender != ''">
            AND tea_gender = #{teacherDto.teaGender}
        </if>
        <if test="teacherDto.teaDept != null and teacherDto.teaDept != ''">
            AND tea_dept LIKE concat('%', #{teacherDto.teaDept}, '%')
        </if>
        <if test="teacherDto.teaTitle != null and teacherDto.teaTitle != ''">
            AND tea_title LIKE concat('%', #{teacherDto.teaTitle}, '%')
        </if>
        <if test="teacherDto.teaPhone != null and teacherDto.teaPhone != ''">
            AND tea_phone LIKE concat('%', #{teacherDto.teaPhone}, '%')
        </if>
        <if test="teacherDto.teaEmail != null and teacherDto.teaEmail != ''">
            AND tea_email LIKE concat('%', #{teacherDto.teaEmail}, '%')
        </if>
        ORDER BY tea_number ASC
        <if test="pageParam.startIndex != null and pageParam.pageSize">
            LIMIT #{pageParam.startIndex}, #{pageParam.pageSize}
        </if>
    </select>
    <!--分页查询，计算总记录数-->
    <select id="countListPage" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM u_teacher
        WHERE valid = 1
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="teaNumber != null and teaNumber != ''">
            AND tea_number LIKE concat('%', #{teaNumber}, '%')
        </if>
        <if test="teaName != null and teaName != ''">
            AND tea_name LIKE concat('%', #{teaName}, '%')
        </if>
        <if test="teaGender != null and teaGender != ''">
            AND tea_gender = #{teaGender}
        </if>
        <if test="teaDept != null and teaDept != ''">
            AND tea_dept LIKE concat('%', #{teaDept}, '%')
        </if>
        <if test="teaTitle != null and teaTitle != ''">
            AND tea_title LIKE concat('%', #{teaTitle}, '%')
        </if>
        <if test="teaPhone != null and teaPhone != ''">
            AND tea_phone LIKE concat('%', #{teaPhone}, '%')
        </if>
        <if test="teaEmail != null and teaEmail != ''">
            AND tea_email LIKE concat('%', #{teaEmail}, '%')
        </if>
    </select>
    <update id="updateValidByTeaId">
        UPDATE u_teacher
        SET valid           = #{valid},
            update_time     = now(),
            pwd_update_time = now(),
            update_by       = #{updateBy}
        WHERE id = #{id}
    </update>
    <!--新增教师-->
    <insert id="save" parameterType="com.ky.ulearning.spi.system.dto.TeacherDto"
            keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO u_teacher(tea_number, tea_name, tea_password, tea_gender, tea_dept, tea_title, tea_phone, tea_email,
                              tea_photo, valid, memo, create_time, create_by, update_time, update_by, pwd_update_time)
        VALUES (#{teaNumber}, #{teaName}, #{teaPassword}, #{teaGender}, #{teaDept}, #{teaTitle}, #{teaPhone},
                #{teaEmail}, #{teaPhoto}, 1, #{memo}, now(), #{createBy}, now(), #{updateBy}, now())
    </insert>
    <!--根据id查询教师信息-->
    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="selectAll"/>
        FROM u_teacher
        WHERE valid = 1
        AND id = #{id}
        LIMIT 1
    </select>
    <!--查询所有教师信息-->
    <select id="getAllVo" resultMap="TeacherVoResultMap">
        SELECT
        <include refid="vo"/>
        FROM u_teacher
        WHERE valid = 1
    </select>
    <!--根据email查询教师信息-->
    <select id="getListByTeaEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="selectAll"/>
        FROM u_teacher
        WHERE valid = 1
        AND tea_email = #{teaEmail}
    </select>
    <!--获取所有工号-->
    <select id="getTeaNumberList" resultType="java.lang.String">
        SELECT tea_number
        FROM u_teacher
        WHERE valid = 1
    </select>
    <!--获取所有邮箱-->
    <select id="getTeaEmailList" resultType="java.lang.String">
        SELECT tea_email
        FROM u_teacher
        WHERE valid = 1
    </select>
    <!--批量添加教师数据-->
    <select id="batchInsert">
        INSERT INTO u_teacher(tea_number, tea_name, tea_password, tea_gender, tea_dept, tea_title, tea_phone, tea_email,
        tea_photo, valid, memo, create_time, create_by, update_time, update_by, pwd_update_time)
        VALUES
        <foreach collection="list" item="teacher" separator=",">
            (#{teacher.teaNumber}, #{teacher.teaName},
            #{teacher.teaPassword}, #{teacher.teaGender}, #{teacher.teaDept},
            #{teacher.teaTitle}, #{teacher.teaPhone},
            #{teacher.teaEmail}, #{teacher.teaPhoto}, 1,
            #{teacher.memo}, now(), #{teacher.createBy}, now(),
            #{teacher.updateBy}, now())
        </foreach>
    </select>
</mapper>
