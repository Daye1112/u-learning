<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ky.ulearning.teacher.dao.CourseDocumentationDao">
    <resultMap id="BaseResultMap" type="com.ky.ulearning.spi.teacher.entity.CourseDocumentationEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="documentation_title" jdbcType="VARCHAR" property="documentationTitle"/>
        <result column="documentation_summary" jdbcType="VARCHAR" property="documentationSummary"/>
        <result column="documentation_category" jdbcType="SMALLINT" property="documentationCategory"/>
        <result column="documentation_shared" jdbcType="BOOLEAN" property="documentationShared"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="file_id" jdbcType="BIGINT" property="fileId"/>
    </resultMap>
    <resultMap id="CourseFileDocumentationDtoMap" type="com.ky.ulearning.spi.teacher.dto.CourseFileDocumentationDto">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="documentation_title" jdbcType="VARCHAR" property="documentationTitle"/>
        <result column="documentation_summary" jdbcType="VARCHAR" property="documentationSummary"/>
        <result column="documentation_category" jdbcType="SMALLINT" property="documentationCategory"/>
        <result column="documentation_shared" jdbcType="BOOLEAN" property="documentationShared"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="file_id" jdbcType="BIGINT" property="fileId"/>

        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
        <result column="file_size" jdbcType="BIGINT" property="fileSize"/>
        <result column="file_ext" jdbcType="VARCHAR" property="fileExt"/>
        <result column="file_type" jdbcType="SMALLINT" property="fileType"/>
        <result column="file_parent_id" jdbcType="BIGINT" property="fileParentId"/>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            documentation_title,
            documentation_summary,
            documentation_category,
            documentation_shared,
            `valid`,
            memo,
            create_time,
            create_by,
            update_time,
            update_by,
            file_id
    </sql>
    <select id="getById" parameterType="java.lang.Long" resultMap="CourseFileDocumentationDtoMap">
        SELECT ucd.id,
               ucd.documentation_title,
               ucd.documentation_summary,
               ucd.documentation_category,
               ucd.documentation_shared,
               ucd.valid,
               ucd.memo,
               ucd.create_time,
               ucd.create_by,
               ucd.update_time,
               ucd.update_by,
               ucf.id AS file_id,
               ucf.file_name,
               ucf.file_size,
               ucf.file_ext,
               ucf.file_type,
               ucf.file_parent_id
        FROM u_course_file ucf
                 INNER JOIN u_course_documentation ucd ON ucd.valid = 1 AND ucf.id = ucd.file_id
        WHERE ucf.valid = 1
          AND ucd.id = #{id}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.ky.ulearning.spi.teacher.dto.CourseDocumentationDto" useGeneratedKeys="true">
        insert into u_course_documentation (documentation_title, documentation_summary,
                                            documentation_category, documentation_shared,
                                            `valid`, memo, create_time,
                                            create_by, update_time, update_by,
                                            file_id)
        values (#{documentationTitle,jdbcType=VARCHAR}, #{documentationSummary,jdbcType=VARCHAR},
                #{documentationCategory,jdbcType=SMALLINT}, #{documentationShared,jdbcType=BOOLEAN},
                1, #{memo,jdbcType=VARCHAR}, now(),
                #{createBy,jdbcType=VARCHAR}, now(), #{updateBy,jdbcType=VARCHAR},
                #{fileId,jdbcType=BIGINT})
    </insert>
    <update id="update"
            parameterType="com.ky.ulearning.spi.teacher.dto.CourseDocumentationDto">
        update u_course_documentation
        <set>
            update_time = now(),
            <if test="documentationTitle != null and documentationTitle != ''">
                documentation_title = #{documentationTitle,jdbcType=VARCHAR},
            </if>
            <if test="documentationSummary != null and documentationSummary != ''">
                documentation_summary = #{documentationSummary,jdbcType=VARCHAR},
            </if>
            <if test="documentationCategory != null">
                documentation_category = #{documentationCategory,jdbcType=SMALLINT},
            </if>
            <if test="memo != null and memo != ''">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <!--查询文件资料集合-->
    <select id="getList" resultMap="CourseFileDocumentationDtoMap"
            parameterType="com.ky.ulearning.spi.teacher.dto.CourseFileDocumentationDto">
        SELECT ucd.id,
        ucd.documentation_title,
        ucd.documentation_summary,
        ucd.documentation_category,
        ucd.documentation_shared,
        ucd.valid,
        ucd.memo,
        ucd.create_time,
        ucd.create_by,
        ucd.update_time,
        ucd.update_by,
        ucf.id AS file_id,
        ucf.file_name,
        ucf.file_size,
        ucf.file_ext,
        ucf.file_type,
        ucf.file_parent_id
        FROM u_course_file ucf
        INNER JOIN u_course_documentation ucd ON ucd.valid = 1 AND ucf.id = ucd.file_id
        WHERE ucf.valid = 1
        AND ucf.file_parent_id = #{fileParentId}
        <if test="documentationTitle != null and documentationTitle != ''">
            AND ucd.documentation_title LIKE CONCAT('%', #{documentationTitle} , '%')
        </if>
        <if test="documentationSummary != null and documentationSummary != ''">
            AND ucd.documentation_summary LIKE CONCAT('%', #{documentationSummary} , '%')
        </if>
        <if test="documentationCategory != null">
            AND ucd.documentation_category = #{documentationCategory}
        </if>
        <if test="documentationShared != null">
            AND ucd.documentation_shared = #{documentationShared}
        </if>
        <if test="fileName != null and fileName != ''">
            AND ucf.file_name LIKE CONCAT('%', #{fileName} , '%')
        </if>
        <if test="fileExt != null and fileExt != ''">
            AND ucf.file_ext LIKE CONCAT('%', #{fileExt} , '%')
        </if>
        <if test="fileType != null">
            AND ucf.file_type = #{fileType,jdbcType=INTEGER}
        </if>
    </select>
    <!--根据文件id查询课程文件资料对象-->
    <select id="getByFileId" resultMap="CourseFileDocumentationDtoMap">
        SELECT ucd.id,
               ucd.documentation_title,
               ucd.documentation_summary,
               ucd.documentation_category,
               ucd.documentation_shared,
               ucd.valid,
               ucd.memo,
               ucd.create_time,
               ucd.create_by,
               ucd.update_time,
               ucd.update_by,
               ucf.id AS file_id,
               ucf.file_name,
               ucf.file_size,
               ucf.file_ext,
               ucf.file_type,
               ucf.file_parent_id
        FROM u_course_file ucf
                 INNER JOIN u_course_documentation ucd ON ucd.valid = 1 AND ucf.id = ucd.file_id
        WHERE ucf.valid = 1
          AND ucf.id = #{fileId}
    </select>
    <!--根据id更新valid值-->
    <update id="updateValidById">
        UPDATE u_course_documentation
        SET update_by   = #{updateBy},
            valid       = #{valid},
            update_time = now()
        WHERE valid = 1
          AND id = #{id}
    </update>
    <!--根据父节点id查询所有课程文件资料-->
    <select id="getListByFileParentId" resultMap="CourseFileDocumentationDtoMap">
        SELECT ucd.id,
               ucd.documentation_title,
               ucd.documentation_summary,
               ucd.documentation_category,
               ucd.documentation_shared,
               ucd.valid,
               ucd.memo,
               ucd.create_time,
               ucd.create_by,
               ucd.update_time,
               ucd.update_by,
               ucf.id AS file_id,
               ucf.file_name,
               ucf.file_size,
               ucf.file_ext,
               ucf.file_type,
               ucf.file_parent_id
        FROM u_course_file ucf
                 INNER JOIN u_course_documentation ucd ON ucd.valid = 1 AND ucf.id = ucd.file_id
        WHERE ucf.valid = 1
          AND ucf.file_parent_id = #{fileParentId}
    </select>
    <!--根据父节点id查询所有课程文件资料-文件-->
    <select id="getListByFileParentIdAndFileType" resultMap="CourseFileDocumentationDtoMap">
        SELECT ucd.id,
               ucd.documentation_title,
               ucd.documentation_summary,
               ucd.documentation_category,
               ucd.documentation_shared,
               ucd.valid,
               ucd.memo,
               ucd.create_time,
               ucd.create_by,
               ucd.update_time,
               ucd.update_by,
               ucf.id AS file_id,
               ucf.file_name,
               ucf.file_size,
               ucf.file_ext,
               ucf.file_type,
               ucf.file_parent_id
        FROM u_course_file ucf
                 INNER JOIN u_course_documentation ucd ON ucd.valid = 1 AND ucf.id = ucd.file_id
        WHERE ucf.valid = 1
          AND ucf.file_type = #{fileType}
          AND ucf.file_parent_id = #{fileParentId}
    </select>
    <!--根据id更新分享值-->
    <update id="updateSharedByIds">
        UPDATE u_course_documentation
        SET update_time = now(),
        update_by = #{updateBy},
        documentation_shared = #{documentationShared}
        WHERE valid = 1
        AND id IN
        <foreach collection="idList" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </update>
    <!--根据id更新分享值-->
    <update id="updateSharedById">
        UPDATE u_course_documentation
        SET update_time          = now(),
            update_by            = #{updateBy},
            documentation_shared = #{documentationShared}
        WHERE valid = 1
          AND id = #{id}
    </update>
</mapper>
