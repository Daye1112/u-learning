<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ky.ulearning.teacher.dao.TeachingTaskNoticeDao">
    <resultMap id="BaseResultMap" type="com.ky.ulearning.spi.teacher.entity.TeachingTaskNoticeEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="teaching_task_id" jdbcType="BIGINT" property="teachingTaskId"/>
        <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle"/>
        <result column="notice_content" jdbcType="VARCHAR" property="noticeContent"/>
        <result column="notice_attachment" jdbcType="VARCHAR" property="noticeAttachment"/>
        <result column="notice_shared" jdbcType="BOOLEAN" property="noticeShared"/>
        <result column="notice_post_time" jdbcType="TIMESTAMP" property="noticePostTime"/>
        <result column="notice_keywords" jdbcType="VARCHAR" property="noticeKeywords"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="notice_attachment_name" jdbcType="VARCHAR" property="noticeAttachmentName"/>
    </resultMap>
    <resultMap id="TeachingTaskNoticeDtoMap" type="com.ky.ulearning.spi.teacher.dto.TeachingTaskNoticeDto">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="teaching_task_id" jdbcType="BIGINT" property="teachingTaskId"/>
        <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle"/>
        <result column="notice_content" jdbcType="VARCHAR" property="noticeContent"/>
        <result column="notice_attachment" jdbcType="VARCHAR" property="noticeAttachment"/>
        <result column="notice_shared" jdbcType="BOOLEAN" property="noticeShared"/>
        <result column="notice_post_time" jdbcType="TIMESTAMP" property="noticePostTime"/>
        <result column="notice_keywords" jdbcType="VARCHAR" property="noticeKeywords"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="notice_attachment_name" jdbcType="VARCHAR" property="noticeAttachmentName"/>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            teaching_task_id,
            notice_title,
            notice_content,
            notice_attachment,
            notice_shared,
            notice_post_time,
            notice_keywords,
            `valid`,
            memo,
            create_time,
            create_by,
            update_time,
            update_by,
            notice_attachment_name
    </sql>
    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from u_teaching_task_notice
        where valid = 1
        AND id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.ky.ulearning.spi.teacher.dto.TeachingTaskNoticeDto"
            useGeneratedKeys="true">
        insert into u_teaching_task_notice (teaching_task_id, notice_title, notice_content,
                                            notice_attachment, notice_shared, notice_post_time,
                                            notice_keywords, `valid`, memo,
                                            create_time, create_by, update_time,
                                            update_by, notice_attachment_name)
        values (#{teachingTaskId,jdbcType=BIGINT}, #{noticeTitle,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR},
                #{noticeAttachment,jdbcType=VARCHAR}, #{noticeShared,jdbcType=BOOLEAN},
                #{noticePostTime,jdbcType=TIMESTAMP},
                #{noticeKeywords,jdbcType=VARCHAR}, 1, #{memo,jdbcType=VARCHAR},
                now(), #{createBy,jdbcType=VARCHAR}, now(),
                #{updateBy,jdbcType=VARCHAR}, #{noticeAttachmentName,jdbcType=VARCHAR})
    </insert>
    <update id="update" parameterType="com.ky.ulearning.spi.teacher.dto.TeachingTaskNoticeDto">
        update u_teaching_task_notice
        <set>
            update_time = now(),
            <if test="teachingTaskId != null">
                teaching_task_id = #{teachingTaskId,jdbcType=BIGINT},
            </if>
            <if test="noticeTitle != null and noticeTitle != ''">
                notice_title = #{noticeTitle,jdbcType=VARCHAR},
            </if>
            <if test="noticeContent != null and noticeContent != ''">
                notice_content = #{noticeContent,jdbcType=VARCHAR},
            </if>
            <if test="noticeAttachment != null">
                notice_attachment = #{noticeAttachment,jdbcType=VARCHAR},
            </if>
            <if test="noticeShared != null">
                notice_shared = #{noticeShared,jdbcType=BOOLEAN},
            </if>
            <if test="noticePostTime != null">
                notice_post_time = #{noticePostTime,jdbcType=TIMESTAMP},
            </if>
            <if test="noticeKeywords != null and noticeKeywords != ''">
                notice_keywords = #{noticeKeywords,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                `valid` = #{valid,jdbcType=BOOLEAN},
            </if>
            <if test="memo != null and memo != ''">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="noticeAttachmentName != null">
                notice_attachment_name = #{noticeAttachmentName,jdbcType=VARCHAR},
            </if>
        </set>
        where valid = 1
        AND id = #{id,jdbcType=BIGINT}
    </update>
    <!--分页查询通告内容-->
    <select id="listPage" resultMap="TeachingTaskNoticeDtoMap">
        SELECT uttn.id,
        uttn.teaching_task_id,
        uttn.notice_title,
        uttn.notice_content,
        uttn.notice_attachment,
        uttn.notice_shared,
        uttn.notice_post_time,
        uttn.notice_keywords,
        uttn.valid,
        uttn.memo,
        uttn.create_time,
        uttn.create_by,
        uttn.update_time,
        uttn.update_by,
        uttn.notice_attachment_name
        FROM u_teaching_task_notice uttn
        WHERE uttn.valid = 1
        AND uttn.teaching_task_id = #{teachingTaskNoticeDto.teachingTaskId}
        <if test="teachingTaskNoticeDto.noticeTitle != null and teachingTaskNoticeDto.noticeTitle != ''">
            AND uttn.notice_title LIKE CONCAT('%',#{teachingTaskNoticeDto.noticeTitle}, '%')
        </if>
        <if test="teachingTaskNoticeDto.noticeContent != null and teachingTaskNoticeDto.noticeContent != ''">
            AND uttn.notice_content LIKE CONCAT('%', #{teachingTaskNoticeDto.noticeContent}, '%')
        </if>
        <if test="teachingTaskNoticeDto.noticeShared != null">
            AND uttn.notice_shared = #{teachingTaskNoticeDto.noticeShared}
        </if>
        <if test="teachingTaskNoticeDto.noticePostTime != null">
            AND DATE(uttn.notice_post_time) = #{teachingTaskNoticeDto.noticePostTime}
        </if>
        <if test="teachingTaskNoticeDto.noticeKeywords != null and teachingTaskNoticeDto.noticeKeywords != ''">
            AND uttn.notice_keywords LIKE CONCAT('%', #{teachingTaskNoticeDto.noticeKeywords}, '%')
        </if>
        <if test="teachingTaskNoticeDto.noticeAttachmentName != null and teachingTaskNoticeDto.noticeAttachmentName != ''">
            AND uttn.notice_attachment_name LIKE CONCAT('%', #{teachingTaskNoticeDto.noticeAttachmentName}, '%')
        </if>
        ORDER BY uttn.notice_post_time desc
        <if test="pageParam.startIndex != null and pageParam.pageSize">
            LIMIT #{pageParam.startIndex}, #{pageParam.pageSize}
        </if>
    </select>
    <!--分页查询通告内容 - 总记录-->
    <select id="countListPage" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM u_teaching_task_notice uttn
        WHERE uttn.valid = 1
        AND uttn.teaching_task_id = #{teachingTaskNoticeDto.teachingTaskId}
        <if test="teachingTaskNoticeDto.noticeTitle != null and teachingTaskNoticeDto.noticeTitle != ''">
            AND uttn.notice_title LIKE CONCAT('%',#{teachingTaskNoticeDto.noticeTitle}, '%')
        </if>
        <if test="teachingTaskNoticeDto.noticeContent != null and teachingTaskNoticeDto.noticeContent != ''">
            AND uttn.notice_content LIKE CONCAT('%', #{teachingTaskNoticeDto.noticeContent}, '%')
        </if>
        <if test="teachingTaskNoticeDto.noticeShared != null">
            AND uttn.notice_shared = #{teachingTaskNoticeDto.noticeShared}
        </if>
        <if test="teachingTaskNoticeDto.noticePostTime != null">
            AND DATE(uttn.notice_post_time) = #{teachingTaskNoticeDto.noticePostTime}
        </if>
        <if test="teachingTaskNoticeDto.noticeKeywords != null and teachingTaskNoticeDto.noticeKeywords != ''">
            AND uttn.notice_keywords LIKE CONCAT('%', #{teachingTaskNoticeDto.noticeKeywords}, '%')
        </if>
        <if test="teachingTaskNoticeDto.noticeAttachmentName != null and teachingTaskNoticeDto.noticeAttachmentName != ''">
            AND uttn.notice_attachment_name LIKE CONCAT('%', #{teachingTaskNoticeDto.noticeAttachmentName}, '%')
        </if>
    </select>
    <!--更新valid值-->
    <update id="updateValid">
        UPDATE u_teaching_task_notice
        SET valid       = #{valid},
            update_by   = #{updateBy},
            update_time = now()
        WHERE id = #{id}
    </update>
</mapper>
