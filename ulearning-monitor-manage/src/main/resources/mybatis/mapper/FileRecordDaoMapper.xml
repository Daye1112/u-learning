<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ky.ulearning.monitor.dao.FileRecordDao">
    <resultMap id="BaseResultMap" type="com.ky.ulearning.spi.monitor.entity.FileRecordEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="record_url" jdbcType="VARCHAR" property="recordUrl"/>
        <result column="record_name" jdbcType="VARCHAR" property="recordName"/>
        <result column="record_size" jdbcType="BIGINT" property="recordSize"/>
        <result column="record_type" jdbcType="VARCHAR" property="recordType"/>
        <result column="record_table" jdbcType="VARCHAR" property="recordTable"/>
        <result column="record_table_id" jdbcType="BIGINT" property="recordTableId"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            record_url,
            record_name,
            record_size,
            record_type,
            record_table,
            record_table_id,
            `valid`,
            memo,
            create_time,
            create_by,
            update_time,
            update_by
    </sql>
    <!--根据id查询文件记录-->
    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM u_file_record
        WHERE valid = 1
        AND id = #{id,jdbcType=BIGINT}
    </select>
    <!--插入文件记录-->
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.ky.ulearning.spi.monitor.dto.FileRecordDto" useGeneratedKeys="true">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        VALUES (#{recordUrl,jdbcType=VARCHAR}, #{recordName,jdbcType=VARCHAR}, #{recordSize,jdbcType=BIGINT},
                #{recordType,jdbcType=VARCHAR}, #{recordTable,jdbcType=VARCHAR}, #{recordTableId,jdbcType=BIGINT},
                1, #{memo,jdbcType=VARCHAR}, now(),
                #{createBy,jdbcType=VARCHAR}, now(), #{updateBy,jdbcType=VARCHAR})
    </insert>
    <!--根据id更新记录有效位-->
    <update id="updateValidById">
        UPDATE u_file_record
        SET valid       = #{valid},
            update_time = now(),
            update_by   = #{updateBy}
        WHERE id = #{id}
    </update>
    <!--分页查询文件记录-->
    <select id="listPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM u_file_record
        WHERE valid = 1
        <if test="fileRecordDto.recordName != null and fileRecordDto.recordName != ''">
            AND record_name LIKE CONCAT('%', #{fileRecordDto.recordName} , '%')
        </if>
        <if test="fileRecordDto.recordSize != null">
            AND record_size >= #{fileRecordDto.recordSize}
        </if>
        <if test="fileRecordDto.recordType != null and fileRecordDto.recordType != ''">
            AND record_type LIKE CONCAT('%', #{fileRecordDto.recordType} , '%')
        </if>
        <if test="fileRecordDto.recordTable != null and fileRecordDto.recordTable != ''">
            AND record_table LIKE CONCAT('%', #{fileRecordDto.recordTable} , '%')
        </if>
        ORDER BY update_time DESC
        <if test="pageParam.startIndex != null and pageParam.pageSize">
            LIMIT #{pageParam.startIndex}, #{pageParam.pageSize}
        </if>
    </select>
    <!--分页查询文件记录 - 总记录数-->
    <select id="countListPage" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM u_file_record
        WHERE valid = 1
        <if test="fileRecordDto.recordName != null and fileRecordDto.recordName != ''">
            AND record_name LIKE CONCAT('%', #{fileRecordDto.recordName} , '%')
        </if>
        <if test="fileRecordDto.recordSize != null">
            AND record_size >= #{fileRecordDto.recordSize}
        </if>
        <if test="fileRecordDto.recordType != null and fileRecordDto.recordType != ''">
            AND record_type LIKE CONCAT('%', #{fileRecordDto.recordType} , '%')
        </if>
        <if test="fileRecordDto.recordTable != null and fileRecordDto.recordTable != ''">
            AND record_table LIKE CONCAT('%', #{fileRecordDto.recordTable} , '%')
        </if>
    </select>
    <!--获取所有文件记录-->
    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM u_file_record
        WHERE valid = 1
    </select>
    <!--从教师表插入文件记录-->
    <insert id="insertFromTeacher">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT tea_photo,
               SUBSTRING_INDEX(tea_photo, '/', -1),
               NULL,
               SUBSTRING_INDEX(tea_photo, '.', -1),
               'u_teacher',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_teacher
        WHERE valid = 1
          AND tea_photo IS NOT NULL
          AND tea_photo NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
    <!--从学生表插入文件记录-->
    <insert id="insertFromStudent">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT stu_photo,
               SUBSTRING_INDEX(stu_photo, '/', -1),
               NULL,
               SUBSTRING_INDEX(stu_photo, '.', -1),
               'u_student',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_student
        WHERE valid = 1
          AND stu_photo IS NOT NULL
          AND stu_photo != ''
          AND stu_photo NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
    <!--从课程试题表插入文件记录-->
    <insert id="insertFromCourseQuestion">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT question_URL,
               SUBSTRING_INDEX(question_URL, '/', -1),
               NULL,
               SUBSTRING_INDEX(question_URL, '.', -1),
               'u_course_question',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_course_question
        WHERE valid = 1
          AND question_URL IS NOT NULL
          AND question_URL != ''
          AND question_URL NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
    <!--从教学任务实验表插入文件记录-->
    <insert id="insertFromTeachingTaskExperiment">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT experiment_attachment,
               experiment_attachment_name,
               NULL,
               SUBSTRING_INDEX(experiment_attachment, '.', -1),
               'u_teaching_task_experiment',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_teaching_task_experiment
        WHERE valid = 1
          AND experiment_attachment IS NOT NULL
          AND experiment_attachment != ''
          AND experiment_attachment NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
    <!--根据table和url更新tableId-->
    <update id="updateTableIdByTableAndUrl">
        UPDATE u_file_record
        SET record_table_id = (
            SELECT id
            FROM ${fileRecordEntity.recordTable}
            WHERE valid = 1
              AND ${tableFileCol} = #{fileRecordEntity.recordUrl}
            LIMIT 1
        )
        WHERE valid = 1
          AND id = #{fileRecordEntity.id}
    </update>
    <!--更新文件大小-->
    <update id="updateRecordSize" parameterType="com.ky.ulearning.spi.monitor.entity.FileRecordEntity">
        UPDATE u_file_record
        SET record_size = #{recordSize},
            update_by   = #{updateBy},
            update_time = now()
        WHERE valid = 1
          AND id = #{id}
    </update>
    <!--从日志历史表插入文件记录-->
    <insert id="insertFromLogHistory">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT log_history_url,
               log_history_name,
               log_history_size,
               SUBSTRING_INDEX(log_history_url, '.', -1),
               'u_log_history',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_log_history
        WHERE valid = 1
          AND log_history_url IS NOT NULL
          AND log_history_url != ''
          AND log_history_url NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
    <!--计算文件总量-->
    <select id="getSumFileSize" resultType="java.lang.Long">
        SELECT COALESCE(SUM(record_size),0)
        FROM u_file_record
        WHERE valid = 1
    </select>
    <!--从课程文件表插入文件记录-->
    <insert id="insertFromCourseFile">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT file_url,
               CONCAT(file_name, '.', file_ext),
               file_size,
               file_ext,
               'u_course_file',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_course_file
        WHERE valid = 1
          AND file_url IS NOT NULL
          AND file_url != ''
          AND file_url NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
    <!--从实验结果表插入文件记录-->
    <insert id="insertFromExperimentResult">
        INSERT INTO u_file_record (record_url, record_name, record_size,
                                   record_type, record_table, record_table_id,
                                   `valid`, memo, create_time,
                                   create_by, update_time, update_by)
        SELECT experiment_URL,
               experiment_attachment_name,
               NULL,
               SUBSTRING_INDEX(experiment_URL, '.', -1),
               'u_experiment_result',
               id,
               1,
               NULL,
               now(),
               'fileRecordHandler',
               now(),
               'fileRecordHandler'
        FROM u_experiment_result
        WHERE valid = 1
          AND experiment_URL IS NOT NULL
          AND experiment_URL != ''
          AND experiment_URL NOT IN (
            SELECT record_url
            FROM u_file_record
            WHERE valid = 1
        )
    </insert>
</mapper>
