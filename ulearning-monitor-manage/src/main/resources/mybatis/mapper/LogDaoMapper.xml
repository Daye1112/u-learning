<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ky.ulearning.monitor.dao.LogDao">
    <resultMap id="BaseResultMap" type="com.ky.ulearning.spi.monitor.entity.LogEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="log_username" jdbcType="VARCHAR" property="logUsername"/>
        <result column="log_description" jdbcType="VARCHAR" property="logDescription"/>
        <result column="log_module" jdbcType="VARCHAR" property="logModule"/>
        <result column="log_ip" jdbcType="VARCHAR" property="logIp"/>
        <result column="log_type" jdbcType="VARCHAR" property="logType"/>
        <result column="log_exception" jdbcType="VARCHAR" property="logException"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="log_params" jdbcType="VARCHAR" property="logParams"/>
        <result column="log_time" jdbcType="BIGINT" property="logTime"/>
        <result column="log_address" jdbcType="VARCHAR" property="logAddress"/>
    </resultMap>
    <sql id="insertSql">
            log_username,
            log_description,
            log_module,
            log_ip,
            log_type,
            log_exception,
            log_params,
            log_time,
            log_address,
            memo,
            create_by,
            update_by
    </sql>
    <sql id="All">
            id,
            log_username,
            log_description,
            log_module,
            log_ip,
            log_type,
            log_exception,
            log_params,
            log_time,
            log_address,
            valid,
            memo,
            create_time,
            create_by,
            update_time,
            update_by
    </sql>
    <!-- 插入记录 -->
    <insert id="insert" parameterType="com.ky.ulearning.spi.monitor.entity.LogEntity">
        insert into u_log(<include refid="insertSql"/>)
        values (#{logUsername}, #{logDescription},
        #{logModule}, #{logIp},
        #{logType}, #{logException},
        #{logParams}, #{logTime},
        #{logAddress}, #{memo},
        #{createBy}, #{updateBy})
    </insert>
    <!--分页查询日志信息-->
    <select id="listPage" resultMap="BaseResultMap">
        SELECT
        <include refid="All"/>
        FROM u_log
        WHERE valid = 1
        <if test="logDto.id != null">
            AND id = #{logDto.id}
        </if>
        <if test="logDto.logUsername != null and logDto.logUsername != ''">
            AND log_username LIKE CONCAT('%', #{logDto.logUsername}, '%')
        </if>
        <if test="logDto.logDescription != null and logDto.logDescription != ''">
            AND log_description LIKE CONCAT('%', #{logDto.logDescription}, '%')
        </if>
        <if test="logDto.logModule != null and logDto.logModule != ''">
            AND log_module LIKE CONCAT('%', #{logDto.logModule}, '%')
        </if>
        <if test="logDto.logIp != null and logDto.logIp != ''">
            AND log_ip LIKE CONCAT('%', #{logDto.logIp}, '%')
        </if>
        <if test="logDto.logType != null and logDto.logType != ''">
            AND log_type LIKE CONCAT('%', #{logDto.logType}, '%')
        </if>
        <if test="logDto.logException != null and logDto.logException != ''">
            AND log_exception LIKE CONCAT('%', #{logDto.logException}, '%')
        </if>
        <if test="logDto.logParams != null and logDto.logParams != ''">
            AND log_params LIKE CONCAT('%', #{logDto.logParams}, '%')
        </if>
        <if test="logDto.logAddress != null and logDto.logAddress != ''">
            AND log_address LIKE CONCAT('%', #{logDto.logAddress}, '%')
        </if>
        <if test="logDto.createTime != null">
            AND DATE(create_time) = #{logDto.createTime}
        </if>
        order by update_time desc
        <if test="pageParam.startIndex != null and pageParam.pageSize">
            limit #{pageParam.startIndex}, #{pageParam.pageSize}
        </if>
    </select>
    <!--根据筛选条件查询总记录数-->
    <select id="countListPage" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM u_log
        WHERE valid = 1
        <if test="logDto.logUsername != null and logDto.logUsername != ''">
            AND log_username LIKE CONCAT('%', #{logDto.logUsername}, '%')
        </if>
        <if test="logDto.logDescription != null and logDto.logDescription != ''">
            AND log_description LIKE CONCAT('%', #{logDto.logDescription}, '%')
        </if>
        <if test="logDto.logModule != null and logDto.logModule != ''">
            AND log_module LIKE CONCAT('%', #{logDto.logModule}, '%')
        </if>
        <if test="logDto.logIp != null and logDto.logIp != ''">
            AND log_ip LIKE CONCAT('%', #{logDto.logIp}, '%')
        </if>
        <if test="logDto.logType != null and logDto.logType != ''">
            AND log_type LIKE CONCAT('%', #{logDto.logType}, '%')
        </if>
        <if test="logDto.logException != null and logDto.logException != ''">
            AND log_exception LIKE CONCAT('%', #{logDto.logException}, '%')
        </if>
        <if test="logDto.logParams != null and logDto.logParams != ''">
            AND log_params LIKE CONCAT('%', #{logDto.logParams}, '%')
        </if>
        <if test="logDto.logAddress != null and logDto.logAddress != ''">
            AND log_address LIKE CONCAT('%', #{logDto.logAddress}, '%')
        </if>
        <if test="logDto.createTime != null">
            AND DATE(create_time) = #{logDto.createTime}
        </if>
    </select>
    <!--获取日志类型集合-->
    <select id="getLogType" resultType="java.lang.String">
        SELECT DISTINCT log_type
        FROM u_log
    </select>
    <!--查询小于等于startDelDate的第一个日期-->
    <select id="getFirstCreateTimeLessOrEqual" parameterType="java.lang.String" resultType="java.util.Date">
        SELECT create_time
        FROM u_log
        WHERE valid = 1
          AND DATE(create_time) <![CDATA[ <= ]]> #{dateTime}
        ORDER BY create_time ASC
        LIMIT 1
    </select>
    <!--根据日期查询日志记录-->
    <select id="getByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="All"/>
        FROM u_log
        WHERE DATE(create_time) = #{date}
        ORDER BY update_time ASC
    </select>
    <!--根据日期删除日志-->
    <delete id="deleteByDate">
        DELETE FROM u_log
        WHERE DATE(create_time) = #{date}
    </delete>
</mapper>