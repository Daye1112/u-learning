<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ky.ulearning.student.dao.ExaminationResultDao">
    <resultMap id="BaseResultMap" type="com.ky.ulearning.spi.student.entity.ExaminationResultEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="question_id" jdbcType="BIGINT" property="questionId"/>
        <result column="examining_id" jdbcType="BIGINT" property="examiningId"/>
        <result column="student_answer" jdbcType="VARCHAR" property="studentAnswer"/>
        <result column="student_score" jdbcType="FLOAT" property="studentScore"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
    </resultMap>
    <resultMap id="ExaminationResultDtoMap" type="com.ky.ulearning.spi.student.dto.ExaminationResultDto">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="question_id" jdbcType="BIGINT" property="questionId"/>
        <result column="examining_id" jdbcType="BIGINT" property="examiningId"/>
        <result column="student_answer" jdbcType="VARCHAR" property="studentAnswer"/>
        <result column="student_score" jdbcType="FLOAT" property="studentScore"/>
        <result column="valid" jdbcType="BOOLEAN" property="valid"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>

        <result column="question_key" jdbcType="VARCHAR" property="questionKey"/>
        <result column="question_type" jdbcType="SMALLINT" property="questionType"/>
    </resultMap>

    <resultMap id="CourseQuestionViewVoMap" type="com.ky.ulearning.spi.student.vo.CourseQuestionViewVo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="question_text" jdbcType="VARCHAR" property="questionText"/>
        <result column="question_URL" jdbcType="VARCHAR" property="questionUrl"/>
        <result column="question_type" jdbcType="SMALLINT" property="questionType"/>
        <result column="question_option" jdbcType="VARCHAR" property="questionOption"/>
        <result column="question_difficulty" jdbcType="SMALLINT" property="questionDifficulty"/>
        <result column="question_knowledge" jdbcType="VARCHAR" property="questionKnowledge"/>

        <result column="student_answer" jdbcType="VARCHAR" property="studentAnswer"/>
        <result column="question_key" jdbcType="VARCHAR" property="questionKey"/>
        <result column="student_score" jdbcType="FLOAT" property="studentScore"/>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            question_id,
            examining_id,
            student_answer,
            student_score,
            `valid`,
            memo,
            create_time,
            create_by,
            update_time,
            update_by
    </sql>
    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM u_examination_result
        WHERE valid = 1
        AND id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.ky.ulearning.spi.student.entity.ExaminationResultEntity" useGeneratedKeys="true">
        INSERT INTO u_examination_result (question_id, examining_id, student_answer,
                                          student_score, `valid`, memo,
                                          create_time, create_by, update_time,
                                          update_by)
        VALUES (#{questionId,jdbcType=BIGINT}, #{examiningId,jdbcType=BIGINT}, #{studentAnswer,jdbcType=VARCHAR},
                #{studentScore,jdbcType=FLOAT}, 1, #{memo,jdbcType=VARCHAR},
                now(), #{createBy,jdbcType=VARCHAR}, now(),
                #{updateBy,jdbcType=VARCHAR})
    </insert>
    <update id="update"
            parameterType="com.ky.ulearning.spi.student.dto.ExaminationResultDto">
        UPDATE u_examination_result
        <set>
            update_time = now(),
            update_by = 'system',
            <if test="studentAnswer != null">
                student_answer = #{studentAnswer,jdbcType=VARCHAR},
            </if>
            <if test="studentScore != null">
                student_score = #{studentScore,jdbcType=DOUBLE},
            </if>
        </set>
        WHERE valid = 1
        AND id = #{id,jdbcType=BIGINT}
    </update>
    <!--批量新增测试结果-->
    <select id="batchInsert">
        INSERT INTO u_examination_result (question_id, examining_id, student_answer,
        student_score, `valid`, memo,
        create_time, create_by, update_time,
        update_by)
        VALUES
        <foreach collection="examinationResultDtoList" separator="," item="examinationResultDto">
            (#{examinationResultDto.questionId,jdbcType=BIGINT}, #{examinationResultDto.examiningId,jdbcType=BIGINT},
            #{examinationResultDto.studentAnswer,jdbcType=VARCHAR},
            #{examinationResultDto.studentScore,jdbcType=FLOAT}, 1, #{examinationResultDto.memo,jdbcType=VARCHAR},
            now(), #{examinationResultDto.createBy,jdbcType=VARCHAR}, now(),
            #{examinationResultDto.updateBy,jdbcType=VARCHAR})
        </foreach>
    </select>
    <!--根据学生测试id查询所有课程试题-->
    <select id="getCourseQuestionVoByExaminingId"
            resultMap="com.ky.ulearning.student.dao.CourseQuestionDao.CourseQuestionVoResultMap">
        SELECT ucq.id,
               ucq.question_text,
               ucq.question_URL,
               ucq.question_type,
               ucq.question_option,
               ucq.question_difficulty,
               ucq.question_knowledge,
               uer.student_answer,
               ucq.question_key
        FROM u_examination_result uer
                 INNER JOIN u_course_question ucq ON ucq.valid = 1 AND uer.question_id = ucq.id
        WHERE uer.valid = 1
          AND examining_id = #{examiningId}
    </select>
    <!--根据试题id和测试id批量更新-->
    <update id="updateByQuestionIdAndExaminingId">
        UPDATE u_examination_result
        <set>
            update_time = now(),
            update_by = 'system',
            <if test="examinationResultDto.studentAnswer != null">
                student_answer = #{examinationResultDto.studentAnswer},
            </if>
            <if test="examinationResultDto.studentScore != null">
                student_score = #{examinationResultDto.studentScore},
            </if>
        </set>
        WHERE valid =1
        AND question_id = #{examinationResultDto.questionId}
        AND examining_id = #{examinationResultDto.examiningId};
    </update>
    <!--根据学生测试id查询所有测试结果-->
    <select id="listByExaminingId" resultMap="ExaminationResultDtoMap">
        SELECT uer.id,
               uer.question_id,
               uer.examining_id,
               uer.student_answer,
               uer.student_score,
               uer.`valid`,
               uer.memo,
               uer.create_time,
               uer.create_by,
               uer.update_time,
               uer.update_by,
               ucq.question_key,
               ucq.question_type
        FROM u_examination_result uer
                 INNER JOIN u_course_question ucq ON uer.question_id = ucq.id AND uer.valid = 1
        WHERE uer.valid = 1
          AND uer.examining_id = #{examiningId}
    </select>
    <!--根据学生测试id删除所有测试结果-->
    <update id="deleteByExaminingId">
        UPDATE u_examination_result
        SET valid       = 0,
            update_time = now(),
            update_by   = 'system'
        WHERE valid = 1
          AND examining_id = #{examiningId}
    </update>
    <!--根据学生测试id查询所有课程试题-->
    <select id="getCourseQuestionDetailVoByExaminingId" resultMap="CourseQuestionViewVoMap">
        SELECT ucq.id,
               ucq.question_text,
               ucq.question_URL,
               ucq.question_type,
               ucq.question_option,
               ucq.question_difficulty,
               ucq.question_knowledge,
               ucq.question_key,
               uer.student_score,
               uer.student_answer
        FROM u_examination_result uer
                 INNER JOIN u_course_question ucq ON ucq.valid = 1 AND uer.question_id = ucq.id
        WHERE uer.valid = 1
          AND examining_id = #{examiningId}
    </select>
</mapper>
